$date
	Fri Jul  4 02:59:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_test $end
$var wire 4 ! out [3:0] $end
$var wire 1 " cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % cin $end
$scope module DUT $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 & g0 $end
$var wire 1 ' g1 $end
$var wire 1 ( g2 $end
$var wire 1 ) g3 $end
$var wire 4 * in1 [3:0] $end
$var wire 4 + in2 [3:0] $end
$var wire 1 , p0 $end
$var wire 1 - p1 $end
$var wire 1 . p2 $end
$var wire 1 / p3 $end
$var wire 4 0 t [3:0] $end
$var wire 4 1 sum [3:0] $end
$var wire 3 2 c [3:1] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 2
bx 1
bx 0
x/
x.
x-
x,
bx +
bx *
x)
x(
x'
x&
x%
bx $
bx #
x"
bx !
$end
#5
b101 !
b101 1
b10 2
1"
1,
0-
0.
0/
0&
1'
0(
1)
b0 0
0%
b1011 $
b1011 +
b1010 #
b1010 *
#10
1"
b1110 0
b0 !
b0 1
b111 2
1-
1/
0'
0)
0,
1.
1&
b1 $
b1 +
b1111 #
b1111 *
#15
b0 0
b1 !
b1 1
b0 2
0/
1)
1,
0-
0.
0&
b1001 $
b1001 +
b1000 #
b1000 *
#20
